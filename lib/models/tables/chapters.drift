import 'mangas.drift';

CREATE TABLE chapters(
    _id INTEGER NOT NULL PRIMARY KEY,
    manga_id INTEGER NOT NULL,
    url TEXT NOT NULL,
    name TEXT NOT NULL,
    scanlator TEXT,
    read BOOLEAN NOT NULL,
    bookmark BOOLEAN NOT NULL,
    last_page_read INTEGER NOT NULL,
    chapter_number REAL NOT NULL,
    source_order INTEGER NOT NULL,
    date_fetch DATETIME NOT NULL,
    date_upload DATETIME NOT NULL,
    last_modified_at DATETIME NOT NULL DEFAULT 0,
    FOREIGN KEY(manga_id) REFERENCES mangas (_id)
    ON DELETE CASCADE
);

CREATE INDEX chapters_manga_id_index ON chapters(manga_id);
CREATE INDEX chapters_unread_by_manga_index ON chapters(manga_id, read) WHERE read = 0;

CREATE TRIGGER update_last_modified_at_chapters
AFTER UPDATE ON chapters
FOR EACH ROW
BEGIN
  UPDATE chapters
  SET last_modified_at = unixepoch()
  WHERE _id = new._id;
END;

getChapterById:
SELECT *
FROM chapters
WHERE _id = :id;

getChaptersByMangaId:
SELECT *
FROM chapters
WHERE manga_id = :mangaId;

getBookmarkedChaptersByMangaId:
SELECT *
FROM chapters
WHERE bookmark
AND manga_id = :mangaId;

getChapterByUrl:
SELECT *
FROM chapters
WHERE url = :chapterUrl;

getChapterByUrlAndMangaId:
SELECT *
FROM chapters
WHERE url = :chapterUrl
AND manga_id = :mangaId;

removeChaptersWithIds:
DELETE FROM chapters
WHERE _id IN :chapterIds;
